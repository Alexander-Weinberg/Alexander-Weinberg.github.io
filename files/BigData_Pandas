{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "disciplinary-parade",
   "metadata": {},
   "source": [
    "# Introduction to Pandas\n",
    "\n",
    "---\n",
    "\n",
    "### Pandas background\n",
    "- Name is based on \"Panel Data\", an econometrics term.\n",
    "- Invented by researchers at AQR hedge fund around 2008\n",
    "- Fast, powerful, flexible library for working with datasets\n",
    "    - Especially good for time series (= panel data)\n",
    "    \n",
    "### Useful terms\n",
    "- Main object is a **dataframe** (think spreadsheet in excel)\n",
    "- A ***series*** is a single column of data \n",
    "- The row labels are called the **index** "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "sporting-proportion",
   "metadata": {},
   "source": [
    "# CPS Data\n",
    "\n",
    "---\n",
    "\n",
    "#### Data Overview\n",
    "- Current Population Survey is the official source of many US government statistics\n",
    "- Every month the Labor Department + Census team up to survey the country \n",
    "    - Ask questions about work and employment\n",
    "    - Basic demographics like age, race, sex\n",
    "- We will use the March Annual Social and Economic Supplement which asks detailed questions \n",
    "    - Income\n",
    "    - Hours worked\n",
    "- Data is downloaded from IPUMS.\n",
    "- Variable descriptions are available here: https://cps.ipums.org/\n",
    "    \n",
    "#### Other details\n",
    "I have pre-cleaned the data. This is just to make things simpler to learn in class. \n",
    "\n",
    "- Moved to David Dorn's harmonized occupation codes.\n",
    "- Sample selection following Heathcote Perri Violante 2010 \n",
    "- I have adjusted salaries for inflation using CPI. 2019 dollars. \n",
    "- Computed annual hours using weekly hours and weeks worked.\n",
    "- Binned occupation and education variables.\n",
    "    \n",
    "We will ignore the topcoding of income data. \n",
    "\n",
    "\n",
    "#### Exercises\n",
    "\n",
    "- When we get to an exercise, stop create a new cell and take 5 minutes to solve it.\n",
    "- Solutions are at the end of the notebook."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "seventh-oxygen",
   "metadata": {},
   "source": [
    "## First steps\n",
    "\n",
    "- To begin, lets import the `pandas` package. We will also import `seaborn` and `matplotlib` for plotting functions. \n",
    "- First we'll use the function `pd.read_csv` to import the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "studied-craps",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd                # data analysis\n",
    "import matplotlib.pyplot as plt    # plotting\n",
    "import seaborn as sns              # another plotting library\n",
    "\n",
    "# Pandas display options\n",
    "pd.options.display.float_format = '{:.2f}'.format\n",
    "\n",
    "# Adjust default figure size\n",
    "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
    "\n",
    "# Figure style \n",
    "sns.set_style(\"whitegrid\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "essential-civilization",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import pre-cleaned CPS data\n",
    "url = \"https://alexander-weinberg.github.io/files/cpspanel.zip\"\n",
    "\n",
    "# Import the data from the URL. \n",
    "# Here the data is 'zipped' for faster downloads. Usually do not include the 'zip' option.\n",
    "# WARNING: Big file, may take a while to download\n",
    "df = pd.read_csv(url, compression='zip') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "respective-standing",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>race</th>\n",
       "      <th>annual_hours</th>\n",
       "      <th>occ1990dd</th>\n",
       "      <th>occtitle</th>\n",
       "      <th>occbin</th>\n",
       "      <th>educbin</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>58.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>276</td>\n",
       "      <td>Cashiers</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>Less than HS</td>\n",
       "      <td>20286.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>42.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>337</td>\n",
       "      <td>Bookkeepers and accounting and auditing clerks</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>Less than HS</td>\n",
       "      <td>36299.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>58.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2340.00</td>\n",
       "      <td>799</td>\n",
       "      <td>Production checkers, graders, and sorters in m...</td>\n",
       "      <td>Operators</td>\n",
       "      <td>Less than HS</td>\n",
       "      <td>75656.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>28.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>200.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>379</td>\n",
       "      <td>General office clerks</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>Some college</td>\n",
       "      <td>21098.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>25.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>1560.00</td>\n",
       "      <td>804</td>\n",
       "      <td>Driver/sales workers and truck Drivers</td>\n",
       "      <td>Operators</td>\n",
       "      <td>Some college</td>\n",
       "      <td>31761.88</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     year   age  sex   race  annual_hours  occ1990dd  \\\n",
       "0 1976.00 58.00 2.00 100.00       2080.00        276   \n",
       "1 1976.00 42.00 2.00 100.00       2080.00        337   \n",
       "2 1976.00 58.00 1.00 100.00       2340.00        799   \n",
       "3 1976.00 28.00 2.00 200.00       2080.00        379   \n",
       "4 1976.00 25.00 1.00 100.00       1560.00        804   \n",
       "\n",
       "                                            occtitle        occbin  \\\n",
       "0                                           Cashiers  Sales/Admin.   \n",
       "1     Bookkeepers and accounting and auditing clerks  Sales/Admin.   \n",
       "2  Production checkers, graders, and sorters in m...     Operators   \n",
       "3                              General office clerks  Sales/Admin.   \n",
       "4             Driver/sales workers and truck Drivers     Operators   \n",
       "\n",
       "        educbin   salary  \n",
       "0  Less than HS 20286.76  \n",
       "1  Less than HS 36299.29  \n",
       "2  Less than HS 75656.79  \n",
       "3  Some college 21098.96  \n",
       "4  Some college 31761.88  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# take an initial look at the data\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "editorial-helen",
   "metadata": {},
   "source": [
    "## Initial examination \n",
    "\n",
    "- Use `.head()` function to take a view of the data.\n",
    "- Take a minute to look through the dataframe\n",
    "\n",
    "Notice that some variable names are obvious:\n",
    "\n",
    "    - year\n",
    "    - age\n",
    "    \n",
    "Some variables seem familiar but its unclear what the values mean.\n",
    "\n",
    "    - race\n",
    "    - sex\n",
    "    \n",
    "Other variables are opaque.\n",
    "\n",
    "    - occ1990dd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "dependent-scheme",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1mData dimensions:\u001b[0m\n",
      "-----------------\n",
      "\n",
      "Rows \t=  2539669 \n",
      "Columns =  10 \n",
      "\n",
      "\u001b[1mVariables:\u001b[0m\n",
      "-----------------\n",
      "Variable 0 = year\n",
      "Variable 1 = age\n",
      "Variable 2 = sex\n",
      "Variable 3 = race\n",
      "Variable 4 = annual_hours\n",
      "Variable 5 = occ1990dd\n",
      "Variable 6 = occtitle\n",
      "Variable 7 = occbin\n",
      "Variable 8 = educbin\n",
      "Variable 9 = salary\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[None, None, None, None, None, None, None, None, None, None]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape\n",
    "\n",
    "# (rows, columns)\n",
    "print('\\033[1m' + 'Data dimensions:' + '\\033[0m')\n",
    "print('-----------------')\n",
    "print('\\nRows \\t= ', df.shape[0], '\\nColumns = ', df.shape[1], '\\n')\n",
    "\n",
    "# list of our variables\n",
    "print('\\033[1m' + 'Variables:' + '\\033[0m')\n",
    "print('-----------------')\n",
    "[print(f'Variable {i} = {x}') for i, x in enumerate(df.columns)]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eastern-johns",
   "metadata": {},
   "source": [
    "## Working with a continuous series\n",
    "We can access a series (aka column, aka variable) using brackets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "green-classics",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         58.00\n",
       "1         42.00\n",
       "2         58.00\n",
       "3         28.00\n",
       "4         25.00\n",
       "           ... \n",
       "2539664   35.00\n",
       "2539665     NaN\n",
       "2539666     NaN\n",
       "2539667     NaN\n",
       "2539668     NaN\n",
       "Name: age, Length: 2539669, dtype: float64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This is the variable age\n",
    "df['age'] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "quantitative-council",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   2539665.00\n",
       "mean         40.80\n",
       "std           9.79\n",
       "min          25.00\n",
       "25%          32.00\n",
       "50%          40.00\n",
       "75%          49.00\n",
       "max          60.00\n",
       "Name: age, dtype: float64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# We can examine summary statistics using describe\n",
    "df['age'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "tired-leonard",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average age =  40.79994211835025\n",
      "The max age =  60.0\n",
      "The min age =  25.0\n"
     ]
    }
   ],
   "source": [
    "# We can compute various stats on series\n",
    "print('The average age = ', df['age'].mean())\n",
    "print('The max age = ', df['age'].max())\n",
    "print('The min age = ', df['age'].min())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "pending-concord",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='age', ylabel='Count'>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# We can look at a histogram distribution of ages \n",
    "# x-axis = age\n",
    "# y-axis = number of people with that age\n",
    "sns.histplot(data=df, x=\"age\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "dense-latitude",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         68.00\n",
       "1         52.00\n",
       "2         68.00\n",
       "3         38.00\n",
       "4         35.00\n",
       "           ... \n",
       "2539664   45.00\n",
       "2539665     NaN\n",
       "2539666     NaN\n",
       "2539667     NaN\n",
       "2539668     NaN\n",
       "Name: age, Length: 2539669, dtype: float64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# We can also do random calculations\n",
    "df['age'] + 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "embedded-colony",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>race</th>\n",
       "      <th>annual_hours</th>\n",
       "      <th>occ1990dd</th>\n",
       "      <th>occtitle</th>\n",
       "      <th>occbin</th>\n",
       "      <th>educbin</th>\n",
       "      <th>salary</th>\n",
       "      <th>age_plus_10</th>\n",
       "      <th>age_plus_ten</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>58.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>276</td>\n",
       "      <td>Cashiers</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>Less than HS</td>\n",
       "      <td>20286.76</td>\n",
       "      <td>68.00</td>\n",
       "      <td>68.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>42.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>337</td>\n",
       "      <td>Bookkeepers and accounting and auditing clerks</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>Less than HS</td>\n",
       "      <td>36299.29</td>\n",
       "      <td>52.00</td>\n",
       "      <td>52.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>58.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2340.00</td>\n",
       "      <td>799</td>\n",
       "      <td>Production checkers, graders, and sorters in m...</td>\n",
       "      <td>Operators</td>\n",
       "      <td>Less than HS</td>\n",
       "      <td>75656.79</td>\n",
       "      <td>68.00</td>\n",
       "      <td>68.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>28.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>200.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>379</td>\n",
       "      <td>General office clerks</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>Some college</td>\n",
       "      <td>21098.96</td>\n",
       "      <td>38.00</td>\n",
       "      <td>38.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>25.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>1560.00</td>\n",
       "      <td>804</td>\n",
       "      <td>Driver/sales workers and truck Drivers</td>\n",
       "      <td>Operators</td>\n",
       "      <td>Some college</td>\n",
       "      <td>31761.88</td>\n",
       "      <td>35.00</td>\n",
       "      <td>35.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     year   age  sex   race  annual_hours  occ1990dd  \\\n",
       "0 1976.00 58.00 2.00 100.00       2080.00        276   \n",
       "1 1976.00 42.00 2.00 100.00       2080.00        337   \n",
       "2 1976.00 58.00 1.00 100.00       2340.00        799   \n",
       "3 1976.00 28.00 2.00 200.00       2080.00        379   \n",
       "4 1976.00 25.00 1.00 100.00       1560.00        804   \n",
       "\n",
       "                                            occtitle        occbin  \\\n",
       "0                                           Cashiers  Sales/Admin.   \n",
       "1     Bookkeepers and accounting and auditing clerks  Sales/Admin.   \n",
       "2  Production checkers, graders, and sorters in m...     Operators   \n",
       "3                              General office clerks  Sales/Admin.   \n",
       "4             Driver/sales workers and truck Drivers     Operators   \n",
       "\n",
       "        educbin   salary  age_plus_10  age_plus_ten  \n",
       "0  Less than HS 20286.76        68.00         68.00  \n",
       "1  Less than HS 36299.29        52.00         52.00  \n",
       "2  Less than HS 75656.79        68.00         68.00  \n",
       "3  Some college 21098.96        38.00         38.00  \n",
       "4  Some college 31761.88        35.00         35.00  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This is how we create new variables\n",
    "df['age_plus_ten'] = df['age'] + 10\n",
    "\n",
    "# * = multiply\n",
    "# ** = to the power\n",
    "# / is divide\n",
    "# + is add\n",
    "\n",
    "# scroll to the right to see our new variable\n",
    "df.head() "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "facial-vertical",
   "metadata": {},
   "source": [
    "## Exercise 1\n",
    "\n",
    "The goal today is to examine various trends in income inequality in the United States. We're going figure out how wages have changed for different groups since 1976. The first step is to get a clean measure of wages in our data. I have already adjusted salaries for inflation. \n",
    "\n",
    "1. Which variable is the income variable in our data? \n",
    "\n",
    "2. Compute summary statistics of `salary`. What is the largest salary observed in our data? What is the median? Do the values seem sensible? For reference, the median income in 2018 is around $63,000.\n",
    "\n",
    "3. What is the problem with using `salary` to compare people's income?\n",
    "\n",
    "4. Create a new variable `wage` $=\\frac{\\text{salary}}{\\text{annual_hours}}$."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fuzzy-meeting",
   "metadata": {},
   "source": [
    "## Exploring a categorical series\n",
    "\n",
    "- Continuous variables (e.g. age, income) are on a scale (1,2,3,4,5,...) and have a natural order. \n",
    "\n",
    "- Categorical variables (e.g. sex, race, occupation) do not have a natural order. They are different groups"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "speaking-intent",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.00    1366263\n",
       "2.00    1173402\n",
       "Name: sex, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# How many in each category?\n",
    "# In this data, Male=1 and Female=2 \n",
    "df['sex'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "vocal-objective",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.00   0.54\n",
       "2.00   0.46\n",
       "Name: sex, dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# What share of the data is in each category?\n",
    "df['sex'].value_counts(normalize=True)\n",
    "\n",
    "# In this data, Male=1 and Female=2 \n",
    "# What percent is male?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "printable-karaoke",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x7f97767f0880>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(x='sex', data=df, kind='count')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "rapid-monitoring",
   "metadata": {},
   "source": [
    "## Exercise 2\n",
    "\n",
    "- We are interested in understanding if our sample is representative of the US. \n",
    "- One check is to see if we have a racially representative sample. \n",
    "\n",
    "- Note: individuals are asked in two separate questions \n",
    "    - \"What is your race?\" \n",
    "    - \"Are you Spanish, Hispanic, or Latino?\"\n",
    "    \n",
    "1. Go to [https://cps.ipums.org/cps-action/variables/race#codes_section](https://cps.ipums.org/cps-action/variables/race#codes_section) and look up what the different codes for race mean. Until 2003, the only options were White, Black, and Other.\n",
    "\n",
    "2. Use `value_counts` to see what percent of our data is White. What percent is Black? What percent is Asian?\n",
    "\n",
    "3. Add a new variable `White` to our data frame. The variable should take on a value of `1` or `True` if they are White and a value of `0` or `False` if they are not White.\n",
    "    - If you are not sure what to do: GOOGLE\n",
    "    \n",
    "4. Use `sns.catplot()` to visualize the number of people who are White."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "declared-empty",
   "metadata": {},
   "source": [
    "## Select rows\n",
    "\n",
    "Now we know how to explore continuous and categorical variables, we will see how to subset the data in order to understand how the variables change across groups."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "honey-implementation",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   2539665.00\n",
       "mean       1999.48\n",
       "std          12.34\n",
       "min        1976.00\n",
       "25%        1989.00\n",
       "50%        2001.00\n",
       "75%        2010.00\n",
       "max        2019.00\n",
       "Name: year, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# We have 2.5 million observations\n",
    "# From 1976 all the way to 2019\n",
    "df['year'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "widespread-flood",
   "metadata": {},
   "source": [
    "### Stop and think\n",
    "Is the average wage higher in 2019 than it was in 1976?\n",
    "\n",
    "1. Find the rows of our data from the year 1976.\n",
    "2. Find the rows of our data from 2019.\n",
    "3. Access the column `wage`.\n",
    "3. Compute the mean."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "considerable-transcript",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0          False\n",
       "1          False\n",
       "2          False\n",
       "3          False\n",
       "4          False\n",
       "           ...  \n",
       "2539664     True\n",
       "2539665    False\n",
       "2539666    False\n",
       "2539667    False\n",
       "2539668    False\n",
       "Name: year, Length: 2539669, dtype: bool"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# takes on a value of true if year is 2019 and false if not\n",
    "df['year']==2019 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "labeled-texas",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>race</th>\n",
       "      <th>annual_hours</th>\n",
       "      <th>occ1990dd</th>\n",
       "      <th>occtitle</th>\n",
       "      <th>occbin</th>\n",
       "      <th>educbin</th>\n",
       "      <th>salary</th>\n",
       "      <th>age_plus_10</th>\n",
       "      <th>age_plus_ten</th>\n",
       "      <th>wage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2478278</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>56.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>25</td>\n",
       "      <td>Other financial specialists</td>\n",
       "      <td>Manage./Professional/Tech.</td>\n",
       "      <td>Adv. Degree</td>\n",
       "      <td>110000.00</td>\n",
       "      <td>66.00</td>\n",
       "      <td>66.00</td>\n",
       "      <td>52.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2478279</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>38.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>200.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>106</td>\n",
       "      <td>Physicians' assistants</td>\n",
       "      <td>Manage./Professional/Tech.</td>\n",
       "      <td>College grad</td>\n",
       "      <td>90000.00</td>\n",
       "      <td>48.00</td>\n",
       "      <td>48.00</td>\n",
       "      <td>43.27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2478280</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>33.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>1300.00</td>\n",
       "      <td>447</td>\n",
       "      <td>Health and nursing aides</td>\n",
       "      <td>Farm/Fish/Forest</td>\n",
       "      <td>Less than HS</td>\n",
       "      <td>25000.00</td>\n",
       "      <td>43.00</td>\n",
       "      <td>43.00</td>\n",
       "      <td>19.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2478281</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>42.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>651.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>744</td>\n",
       "      <td>Textile sewing machine operators</td>\n",
       "      <td>Operators</td>\n",
       "      <td>Some college</td>\n",
       "      <td>26000.00</td>\n",
       "      <td>52.00</td>\n",
       "      <td>52.00</td>\n",
       "      <td>12.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2478282</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>37.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>22</td>\n",
       "      <td>Managers and administrators, n.e.c.</td>\n",
       "      <td>Manage./Professional/Tech.</td>\n",
       "      <td>Some college</td>\n",
       "      <td>80000.00</td>\n",
       "      <td>47.00</td>\n",
       "      <td>47.00</td>\n",
       "      <td>38.46</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           year   age  sex   race  annual_hours  occ1990dd  \\\n",
       "2478278 2019.00 56.00 2.00 100.00       2080.00         25   \n",
       "2478279 2019.00 38.00 2.00 200.00       2080.00        106   \n",
       "2478280 2019.00 33.00 2.00 100.00       1300.00        447   \n",
       "2478281 2019.00 42.00 2.00 651.00       2080.00        744   \n",
       "2478282 2019.00 37.00 1.00 100.00       2080.00         22   \n",
       "\n",
       "                                    occtitle                      occbin  \\\n",
       "2478278          Other financial specialists  Manage./Professional/Tech.   \n",
       "2478279               Physicians' assistants  Manage./Professional/Tech.   \n",
       "2478280             Health and nursing aides            Farm/Fish/Forest   \n",
       "2478281     Textile sewing machine operators                   Operators   \n",
       "2478282  Managers and administrators, n.e.c.  Manage./Professional/Tech.   \n",
       "\n",
       "              educbin    salary  age_plus_10  age_plus_ten  wage  \n",
       "2478278   Adv. Degree 110000.00        66.00         66.00 52.88  \n",
       "2478279  College grad  90000.00        48.00         48.00 43.27  \n",
       "2478280  Less than HS  25000.00        43.00         43.00 19.23  \n",
       "2478281  Some college  26000.00        52.00         52.00 12.50  \n",
       "2478282  Some college  80000.00        47.00         47.00 38.46  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# make a new dataframe with only observations in 2019\n",
    "idx = df['year']==2019\n",
    "\n",
    "df19 = df[idx]\n",
    "df19.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "convertible-ebony",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   61387.00\n",
       "mean     2019.00\n",
       "std         0.00\n",
       "min      2019.00\n",
       "25%      2019.00\n",
       "50%      2019.00\n",
       "75%      2019.00\n",
       "max      2019.00\n",
       "Name: year, dtype: float64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# lets check if this worked\n",
    "# nice all of the years in this dataset at 2019\n",
    "\n",
    "df19['year'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "favorite-trinity",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29.639850355541597"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# What is the mean wage in 2019?\n",
    "df19['wage'].mean()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "activated-ireland",
   "metadata": {},
   "source": [
    "## Exercise 3\n",
    "\n",
    "1. Find the mean wage for the year 1976 using the steps above."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "given-commander",
   "metadata": {},
   "source": [
    "## More data cleaning\n",
    "\n",
    "- I made a mistake when merging in the occupation titles.\n",
    "- These last few occupations do not represent people. They are missing data.\n",
    "- `NaN` = not a number. \n",
    "    - Similar to `null`, `NA`, `missing`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "beneficial-growing",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>race</th>\n",
       "      <th>annual_hours</th>\n",
       "      <th>occ1990dd</th>\n",
       "      <th>occtitle</th>\n",
       "      <th>occbin</th>\n",
       "      <th>educbin</th>\n",
       "      <th>salary</th>\n",
       "      <th>age_plus_10</th>\n",
       "      <th>age_plus_ten</th>\n",
       "      <th>wage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2539664</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>35.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2000.00</td>\n",
       "      <td>869</td>\n",
       "      <td>Construction laborers</td>\n",
       "      <td>Operators</td>\n",
       "      <td>HS Grad</td>\n",
       "      <td>44000.00</td>\n",
       "      <td>45.00</td>\n",
       "      <td>45.00</td>\n",
       "      <td>22.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539665</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>346</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539666</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>679</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Production</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539667</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>475</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Service</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539668</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>225</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           year   age  sex   race  annual_hours  occ1990dd  \\\n",
       "2539664 2019.00 35.00 1.00 100.00       2000.00        869   \n",
       "2539665     NaN   NaN  NaN    NaN           NaN        346   \n",
       "2539666     NaN   NaN  NaN    NaN           NaN        679   \n",
       "2539667     NaN   NaN  NaN    NaN           NaN        475   \n",
       "2539668     NaN   NaN  NaN    NaN           NaN        225   \n",
       "\n",
       "                      occtitle        occbin  educbin   salary  age_plus_10  \\\n",
       "2539664  Construction laborers     Operators  HS Grad 44000.00        45.00   \n",
       "2539665                    NaN  Sales/Admin.      NaN      NaN          NaN   \n",
       "2539666                    NaN    Production      NaN      NaN          NaN   \n",
       "2539667                    NaN       Service      NaN      NaN          NaN   \n",
       "2539668                    NaN  Sales/Admin.      NaN      NaN          NaN   \n",
       "\n",
       "         age_plus_ten  wage  \n",
       "2539664         45.00 22.00  \n",
       "2539665           NaN   NaN  \n",
       "2539666           NaN   NaN  \n",
       "2539667           NaN   NaN  \n",
       "2539668           NaN   NaN  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# the function tail lets us look at the last few observations\n",
    "df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "seasonal-johns",
   "metadata": {},
   "source": [
    "We want to drop observations which are missing.\n",
    "- We will use the functions `df.isna()`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "french-victor",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>race</th>\n",
       "      <th>annual_hours</th>\n",
       "      <th>occ1990dd</th>\n",
       "      <th>occtitle</th>\n",
       "      <th>occbin</th>\n",
       "      <th>educbin</th>\n",
       "      <th>salary</th>\n",
       "      <th>age_plus_10</th>\n",
       "      <th>age_plus_ten</th>\n",
       "      <th>wage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2539664</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539665</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539666</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539667</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539668</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          year    age    sex   race  annual_hours  occ1990dd  occtitle  \\\n",
       "2539664  False  False  False  False         False      False     False   \n",
       "2539665   True   True   True   True          True      False      True   \n",
       "2539666   True   True   True   True          True      False      True   \n",
       "2539667   True   True   True   True          True      False      True   \n",
       "2539668   True   True   True   True          True      False      True   \n",
       "\n",
       "         occbin  educbin  salary  age_plus_10  age_plus_ten   wage  \n",
       "2539664   False    False   False        False         False  False  \n",
       "2539665   False     True    True         True          True   True  \n",
       "2539666   False     True    True         True          True   True  \n",
       "2539667   False     True    True         True          True   True  \n",
       "2539668   False     True    True         True          True   True  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# The function takes a value of `true` if NA\n",
    "# `false` if not NA\n",
    "df.isna().tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "appropriate-operator",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>race</th>\n",
       "      <th>annual_hours</th>\n",
       "      <th>occ1990dd</th>\n",
       "      <th>occtitle</th>\n",
       "      <th>occbin</th>\n",
       "      <th>educbin</th>\n",
       "      <th>salary</th>\n",
       "      <th>age_plus_10</th>\n",
       "      <th>age_plus_ten</th>\n",
       "      <th>wage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2539660</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>25.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>1404.00</td>\n",
       "      <td>405</td>\n",
       "      <td>Housekeepers, maids, butlers, and cleaners</td>\n",
       "      <td>Farm/Fish/Forest</td>\n",
       "      <td>Some college</td>\n",
       "      <td>7000.00</td>\n",
       "      <td>35.00</td>\n",
       "      <td>35.00</td>\n",
       "      <td>4.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539661</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>29.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>651.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>436</td>\n",
       "      <td>Cooks</td>\n",
       "      <td>Farm/Fish/Forest</td>\n",
       "      <td>Some college</td>\n",
       "      <td>40000.00</td>\n",
       "      <td>39.00</td>\n",
       "      <td>39.00</td>\n",
       "      <td>19.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539662</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>38.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2340.00</td>\n",
       "      <td>505</td>\n",
       "      <td>Automobile mechanics and repairers</td>\n",
       "      <td>Production</td>\n",
       "      <td>Some college</td>\n",
       "      <td>62000.00</td>\n",
       "      <td>48.00</td>\n",
       "      <td>48.00</td>\n",
       "      <td>26.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539663</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>57.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>3120.00</td>\n",
       "      <td>22</td>\n",
       "      <td>Managers and administrators, n.e.c.</td>\n",
       "      <td>Manage./Professional/Tech.</td>\n",
       "      <td>College grad</td>\n",
       "      <td>70000.00</td>\n",
       "      <td>67.00</td>\n",
       "      <td>67.00</td>\n",
       "      <td>22.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2539664</th>\n",
       "      <td>2019.00</td>\n",
       "      <td>35.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2000.00</td>\n",
       "      <td>869</td>\n",
       "      <td>Construction laborers</td>\n",
       "      <td>Operators</td>\n",
       "      <td>HS Grad</td>\n",
       "      <td>44000.00</td>\n",
       "      <td>45.00</td>\n",
       "      <td>45.00</td>\n",
       "      <td>22.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           year   age  sex   race  annual_hours  occ1990dd  \\\n",
       "2539660 2019.00 25.00 2.00 100.00       1404.00        405   \n",
       "2539661 2019.00 29.00 1.00 651.00       2080.00        436   \n",
       "2539662 2019.00 38.00 1.00 100.00       2340.00        505   \n",
       "2539663 2019.00 57.00 2.00 100.00       3120.00         22   \n",
       "2539664 2019.00 35.00 1.00 100.00       2000.00        869   \n",
       "\n",
       "                                           occtitle  \\\n",
       "2539660  Housekeepers, maids, butlers, and cleaners   \n",
       "2539661                                       Cooks   \n",
       "2539662          Automobile mechanics and repairers   \n",
       "2539663         Managers and administrators, n.e.c.   \n",
       "2539664                       Construction laborers   \n",
       "\n",
       "                             occbin       educbin   salary  age_plus_10  \\\n",
       "2539660            Farm/Fish/Forest  Some college  7000.00        35.00   \n",
       "2539661            Farm/Fish/Forest  Some college 40000.00        39.00   \n",
       "2539662                  Production  Some college 62000.00        48.00   \n",
       "2539663  Manage./Professional/Tech.  College grad 70000.00        67.00   \n",
       "2539664                   Operators       HS Grad 44000.00        45.00   \n",
       "\n",
       "         age_plus_ten  wage  \n",
       "2539660         35.00  4.99  \n",
       "2539661         39.00 19.23  \n",
       "2539662         48.00 26.50  \n",
       "2539663         67.00 22.44  \n",
       "2539664         45.00 22.00  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Mark the rows we want to drop. If missing the variable year.\n",
    "missingyear = df['year'].isna()\n",
    "\n",
    "# drop those rows, ~ means 'not'\n",
    "df = df[~missingyear]\n",
    "\n",
    "# nice it worked\n",
    "df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "becoming-savannah",
   "metadata": {},
   "source": [
    "## Exercise 4\n",
    "\n",
    "- There are often outliers in the data due to data entry errors\n",
    "- We will drop wage outliers\n",
    "\n",
    "1. Drop rows which have a wage < $5 \n",
    "\n",
    "2. Drop rows which have a wage > $500"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "complete-puzzle",
   "metadata": {},
   "source": [
    "## The best way to explore the data is to plot it!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "gorgeous-range",
   "metadata": {},
   "source": [
    "The income distribution is very **right tailed**. \n",
    "\n",
    "That means most people are on the left (= make $100 or less per hour).\n",
    "\n",
    "But that a few people strech all the way to the right. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "center-strengthening",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='wage', ylabel='Count'>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot a histogram of wage\n",
    "sns.histplot(data=df, x=\"wage\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abandoned-apartment",
   "metadata": {},
   "source": [
    "Lets try it again just with folks who make less than $100 per hour in 2019.\n",
    "\n",
    "We can see that a majority of workers make less than $20 per hour."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "grand-supply",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='wage', ylabel='Count'>"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Restrict just to workers who make less than $100 per hour in 2019\n",
    "idx_wage = (df['wage'] <= 100) & (df['year']==2019)\n",
    "dfwage = df[idx_wage]\n",
    "\n",
    "# plot a histogram of salary\n",
    "sns.histplot(data=dfwage, x=\"wage\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "seasonal-newton",
   "metadata": {},
   "source": [
    "## Trends over time\n",
    "\n",
    "- So far we have mostly pooled our data across years (1976-2019)\n",
    "- Now we want to see how different variables have changed *over time*\n",
    "\n",
    "We use the function `groupby()`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "demanding-scheme",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>race</th>\n",
       "      <th>annual_hours</th>\n",
       "      <th>occ1990dd</th>\n",
       "      <th>salary</th>\n",
       "      <th>age_plus_10</th>\n",
       "      <th>age_plus_ten</th>\n",
       "      <th>wage</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1976.00</th>\n",
       "      <td>40.40</td>\n",
       "      <td>1.39</td>\n",
       "      <td>118.24</td>\n",
       "      <td>1975.38</td>\n",
       "      <td>441.47</td>\n",
       "      <td>49078.93</td>\n",
       "      <td>50.40</td>\n",
       "      <td>50.40</td>\n",
       "      <td>24.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1977.00</th>\n",
       "      <td>40.07</td>\n",
       "      <td>1.39</td>\n",
       "      <td>121.76</td>\n",
       "      <td>1987.32</td>\n",
       "      <td>438.07</td>\n",
       "      <td>49242.04</td>\n",
       "      <td>50.07</td>\n",
       "      <td>50.07</td>\n",
       "      <td>24.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978.00</th>\n",
       "      <td>39.97</td>\n",
       "      <td>1.40</td>\n",
       "      <td>122.11</td>\n",
       "      <td>2000.84</td>\n",
       "      <td>436.29</td>\n",
       "      <td>49777.43</td>\n",
       "      <td>49.97</td>\n",
       "      <td>49.97</td>\n",
       "      <td>24.34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1979.00</th>\n",
       "      <td>39.75</td>\n",
       "      <td>1.41</td>\n",
       "      <td>124.75</td>\n",
       "      <td>2010.22</td>\n",
       "      <td>433.96</td>\n",
       "      <td>48702.99</td>\n",
       "      <td>49.75</td>\n",
       "      <td>49.75</td>\n",
       "      <td>23.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980.00</th>\n",
       "      <td>39.52</td>\n",
       "      <td>1.42</td>\n",
       "      <td>125.99</td>\n",
       "      <td>2001.93</td>\n",
       "      <td>428.93</td>\n",
       "      <td>46033.28</td>\n",
       "      <td>49.52</td>\n",
       "      <td>49.52</td>\n",
       "      <td>22.53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1981.00</th>\n",
       "      <td>39.48</td>\n",
       "      <td>1.42</td>\n",
       "      <td>127.31</td>\n",
       "      <td>1981.21</td>\n",
       "      <td>425.42</td>\n",
       "      <td>44891.04</td>\n",
       "      <td>49.48</td>\n",
       "      <td>49.48</td>\n",
       "      <td>22.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1982.00</th>\n",
       "      <td>39.47</td>\n",
       "      <td>1.43</td>\n",
       "      <td>127.22</td>\n",
       "      <td>1975.13</td>\n",
       "      <td>423.89</td>\n",
       "      <td>45914.47</td>\n",
       "      <td>49.47</td>\n",
       "      <td>49.47</td>\n",
       "      <td>22.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1983.00</th>\n",
       "      <td>39.33</td>\n",
       "      <td>1.43</td>\n",
       "      <td>127.99</td>\n",
       "      <td>1954.25</td>\n",
       "      <td>385.38</td>\n",
       "      <td>46610.72</td>\n",
       "      <td>49.33</td>\n",
       "      <td>49.33</td>\n",
       "      <td>23.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1984.00</th>\n",
       "      <td>39.27</td>\n",
       "      <td>1.44</td>\n",
       "      <td>127.07</td>\n",
       "      <td>1973.26</td>\n",
       "      <td>378.52</td>\n",
       "      <td>46625.59</td>\n",
       "      <td>49.27</td>\n",
       "      <td>49.27</td>\n",
       "      <td>23.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1985.00</th>\n",
       "      <td>39.19</td>\n",
       "      <td>1.44</td>\n",
       "      <td>128.07</td>\n",
       "      <td>2000.39</td>\n",
       "      <td>377.02</td>\n",
       "      <td>48106.38</td>\n",
       "      <td>49.19</td>\n",
       "      <td>49.19</td>\n",
       "      <td>23.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1986.00</th>\n",
       "      <td>39.10</td>\n",
       "      <td>1.44</td>\n",
       "      <td>129.41</td>\n",
       "      <td>2006.03</td>\n",
       "      <td>374.98</td>\n",
       "      <td>49498.04</td>\n",
       "      <td>49.10</td>\n",
       "      <td>49.10</td>\n",
       "      <td>24.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1987.00</th>\n",
       "      <td>39.06</td>\n",
       "      <td>1.45</td>\n",
       "      <td>129.94</td>\n",
       "      <td>2015.71</td>\n",
       "      <td>372.33</td>\n",
       "      <td>50000.78</td>\n",
       "      <td>49.06</td>\n",
       "      <td>49.06</td>\n",
       "      <td>24.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1988.00</th>\n",
       "      <td>39.15</td>\n",
       "      <td>1.45</td>\n",
       "      <td>125.60</td>\n",
       "      <td>2029.73</td>\n",
       "      <td>368.76</td>\n",
       "      <td>50099.26</td>\n",
       "      <td>49.15</td>\n",
       "      <td>49.15</td>\n",
       "      <td>24.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1989.00</th>\n",
       "      <td>39.19</td>\n",
       "      <td>1.45</td>\n",
       "      <td>124.98</td>\n",
       "      <td>2040.74</td>\n",
       "      <td>367.94</td>\n",
       "      <td>49565.48</td>\n",
       "      <td>49.19</td>\n",
       "      <td>49.19</td>\n",
       "      <td>23.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1990.00</th>\n",
       "      <td>39.27</td>\n",
       "      <td>1.46</td>\n",
       "      <td>127.96</td>\n",
       "      <td>2036.08</td>\n",
       "      <td>366.56</td>\n",
       "      <td>49501.27</td>\n",
       "      <td>49.27</td>\n",
       "      <td>49.27</td>\n",
       "      <td>23.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1991.00</th>\n",
       "      <td>39.39</td>\n",
       "      <td>1.46</td>\n",
       "      <td>128.27</td>\n",
       "      <td>2027.52</td>\n",
       "      <td>367.89</td>\n",
       "      <td>48187.00</td>\n",
       "      <td>49.39</td>\n",
       "      <td>49.39</td>\n",
       "      <td>23.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1992.00</th>\n",
       "      <td>39.53</td>\n",
       "      <td>1.46</td>\n",
       "      <td>128.84</td>\n",
       "      <td>2018.73</td>\n",
       "      <td>363.50</td>\n",
       "      <td>47905.88</td>\n",
       "      <td>49.53</td>\n",
       "      <td>49.53</td>\n",
       "      <td>23.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1993.00</th>\n",
       "      <td>39.73</td>\n",
       "      <td>1.47</td>\n",
       "      <td>130.98</td>\n",
       "      <td>2028.55</td>\n",
       "      <td>360.76</td>\n",
       "      <td>48439.27</td>\n",
       "      <td>49.73</td>\n",
       "      <td>49.73</td>\n",
       "      <td>23.34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1994.00</th>\n",
       "      <td>39.86</td>\n",
       "      <td>1.47</td>\n",
       "      <td>134.58</td>\n",
       "      <td>2048.59</td>\n",
       "      <td>357.29</td>\n",
       "      <td>48909.06</td>\n",
       "      <td>49.86</td>\n",
       "      <td>49.86</td>\n",
       "      <td>23.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995.00</th>\n",
       "      <td>40.10</td>\n",
       "      <td>1.47</td>\n",
       "      <td>141.38</td>\n",
       "      <td>2057.31</td>\n",
       "      <td>354.14</td>\n",
       "      <td>49615.22</td>\n",
       "      <td>50.10</td>\n",
       "      <td>50.10</td>\n",
       "      <td>23.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996.00</th>\n",
       "      <td>40.29</td>\n",
       "      <td>1.47</td>\n",
       "      <td>129.55</td>\n",
       "      <td>2071.22</td>\n",
       "      <td>355.11</td>\n",
       "      <td>51822.09</td>\n",
       "      <td>50.29</td>\n",
       "      <td>50.29</td>\n",
       "      <td>24.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997.00</th>\n",
       "      <td>40.37</td>\n",
       "      <td>1.47</td>\n",
       "      <td>130.00</td>\n",
       "      <td>2070.47</td>\n",
       "      <td>353.21</td>\n",
       "      <td>52351.05</td>\n",
       "      <td>50.37</td>\n",
       "      <td>50.37</td>\n",
       "      <td>24.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998.00</th>\n",
       "      <td>40.56</td>\n",
       "      <td>1.47</td>\n",
       "      <td>131.28</td>\n",
       "      <td>2075.67</td>\n",
       "      <td>350.72</td>\n",
       "      <td>54277.19</td>\n",
       "      <td>50.56</td>\n",
       "      <td>50.56</td>\n",
       "      <td>25.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999.00</th>\n",
       "      <td>40.78</td>\n",
       "      <td>1.47</td>\n",
       "      <td>130.62</td>\n",
       "      <td>2084.51</td>\n",
       "      <td>348.56</td>\n",
       "      <td>55508.53</td>\n",
       "      <td>50.78</td>\n",
       "      <td>50.78</td>\n",
       "      <td>25.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000.00</th>\n",
       "      <td>40.92</td>\n",
       "      <td>1.47</td>\n",
       "      <td>131.66</td>\n",
       "      <td>2089.98</td>\n",
       "      <td>349.30</td>\n",
       "      <td>54405.77</td>\n",
       "      <td>50.92</td>\n",
       "      <td>50.92</td>\n",
       "      <td>25.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2001.00</th>\n",
       "      <td>40.81</td>\n",
       "      <td>1.47</td>\n",
       "      <td>141.75</td>\n",
       "      <td>2088.64</td>\n",
       "      <td>344.47</td>\n",
       "      <td>57874.79</td>\n",
       "      <td>50.81</td>\n",
       "      <td>50.81</td>\n",
       "      <td>26.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2002.00</th>\n",
       "      <td>41.05</td>\n",
       "      <td>1.47</td>\n",
       "      <td>140.67</td>\n",
       "      <td>2076.13</td>\n",
       "      <td>341.63</td>\n",
       "      <td>59400.99</td>\n",
       "      <td>51.05</td>\n",
       "      <td>51.05</td>\n",
       "      <td>27.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2003.00</th>\n",
       "      <td>41.34</td>\n",
       "      <td>1.47</td>\n",
       "      <td>149.28</td>\n",
       "      <td>2066.24</td>\n",
       "      <td>341.54</td>\n",
       "      <td>58607.68</td>\n",
       "      <td>51.34</td>\n",
       "      <td>51.34</td>\n",
       "      <td>27.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004.00</th>\n",
       "      <td>41.60</td>\n",
       "      <td>1.47</td>\n",
       "      <td>151.88</td>\n",
       "      <td>2064.32</td>\n",
       "      <td>339.49</td>\n",
       "      <td>58846.16</td>\n",
       "      <td>51.60</td>\n",
       "      <td>51.60</td>\n",
       "      <td>27.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005.00</th>\n",
       "      <td>41.61</td>\n",
       "      <td>1.47</td>\n",
       "      <td>154.02</td>\n",
       "      <td>2071.69</td>\n",
       "      <td>340.58</td>\n",
       "      <td>58305.72</td>\n",
       "      <td>51.61</td>\n",
       "      <td>51.61</td>\n",
       "      <td>27.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2006.00</th>\n",
       "      <td>41.72</td>\n",
       "      <td>1.47</td>\n",
       "      <td>154.92</td>\n",
       "      <td>2082.65</td>\n",
       "      <td>339.33</td>\n",
       "      <td>58395.18</td>\n",
       "      <td>51.72</td>\n",
       "      <td>51.72</td>\n",
       "      <td>27.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2007.00</th>\n",
       "      <td>41.84</td>\n",
       "      <td>1.47</td>\n",
       "      <td>155.28</td>\n",
       "      <td>2086.05</td>\n",
       "      <td>338.24</td>\n",
       "      <td>59650.03</td>\n",
       "      <td>51.84</td>\n",
       "      <td>51.84</td>\n",
       "      <td>27.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2008.00</th>\n",
       "      <td>41.94</td>\n",
       "      <td>1.48</td>\n",
       "      <td>155.89</td>\n",
       "      <td>2081.83</td>\n",
       "      <td>337.00</td>\n",
       "      <td>58246.10</td>\n",
       "      <td>51.94</td>\n",
       "      <td>51.94</td>\n",
       "      <td>27.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2009.00</th>\n",
       "      <td>41.95</td>\n",
       "      <td>1.48</td>\n",
       "      <td>157.80</td>\n",
       "      <td>2058.96</td>\n",
       "      <td>333.04</td>\n",
       "      <td>59579.17</td>\n",
       "      <td>51.95</td>\n",
       "      <td>51.95</td>\n",
       "      <td>28.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010.00</th>\n",
       "      <td>41.95</td>\n",
       "      <td>1.48</td>\n",
       "      <td>159.48</td>\n",
       "      <td>2028.18</td>\n",
       "      <td>330.92</td>\n",
       "      <td>58363.53</td>\n",
       "      <td>51.95</td>\n",
       "      <td>51.95</td>\n",
       "      <td>27.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011.00</th>\n",
       "      <td>42.02</td>\n",
       "      <td>1.48</td>\n",
       "      <td>160.07</td>\n",
       "      <td>2034.83</td>\n",
       "      <td>328.28</td>\n",
       "      <td>56678.71</td>\n",
       "      <td>52.02</td>\n",
       "      <td>52.02</td>\n",
       "      <td>27.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2012.00</th>\n",
       "      <td>42.12</td>\n",
       "      <td>1.48</td>\n",
       "      <td>161.60</td>\n",
       "      <td>2048.03</td>\n",
       "      <td>327.41</td>\n",
       "      <td>57493.37</td>\n",
       "      <td>52.12</td>\n",
       "      <td>52.12</td>\n",
       "      <td>27.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013.00</th>\n",
       "      <td>42.19</td>\n",
       "      <td>1.47</td>\n",
       "      <td>162.20</td>\n",
       "      <td>2056.17</td>\n",
       "      <td>326.07</td>\n",
       "      <td>57701.02</td>\n",
       "      <td>52.19</td>\n",
       "      <td>52.19</td>\n",
       "      <td>27.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014.00</th>\n",
       "      <td>42.17</td>\n",
       "      <td>1.48</td>\n",
       "      <td>162.42</td>\n",
       "      <td>2059.12</td>\n",
       "      <td>325.88</td>\n",
       "      <td>57637.36</td>\n",
       "      <td>52.17</td>\n",
       "      <td>52.17</td>\n",
       "      <td>27.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015.00</th>\n",
       "      <td>42.07</td>\n",
       "      <td>1.48</td>\n",
       "      <td>164.64</td>\n",
       "      <td>2070.09</td>\n",
       "      <td>326.11</td>\n",
       "      <td>58976.60</td>\n",
       "      <td>52.07</td>\n",
       "      <td>52.07</td>\n",
       "      <td>27.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016.00</th>\n",
       "      <td>42.03</td>\n",
       "      <td>1.48</td>\n",
       "      <td>165.19</td>\n",
       "      <td>2072.36</td>\n",
       "      <td>322.83</td>\n",
       "      <td>60441.27</td>\n",
       "      <td>52.03</td>\n",
       "      <td>52.03</td>\n",
       "      <td>28.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017.00</th>\n",
       "      <td>41.93</td>\n",
       "      <td>1.48</td>\n",
       "      <td>167.40</td>\n",
       "      <td>2078.01</td>\n",
       "      <td>321.88</td>\n",
       "      <td>61140.95</td>\n",
       "      <td>51.93</td>\n",
       "      <td>51.93</td>\n",
       "      <td>28.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018.00</th>\n",
       "      <td>41.96</td>\n",
       "      <td>1.48</td>\n",
       "      <td>168.83</td>\n",
       "      <td>2080.33</td>\n",
       "      <td>322.60</td>\n",
       "      <td>61611.07</td>\n",
       "      <td>51.96</td>\n",
       "      <td>51.96</td>\n",
       "      <td>29.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019.00</th>\n",
       "      <td>41.92</td>\n",
       "      <td>1.48</td>\n",
       "      <td>168.87</td>\n",
       "      <td>2083.37</td>\n",
       "      <td>319.81</td>\n",
       "      <td>62327.91</td>\n",
       "      <td>51.92</td>\n",
       "      <td>51.92</td>\n",
       "      <td>29.29</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          age  sex   race  annual_hours  occ1990dd   salary  age_plus_10  \\\n",
       "year                                                                       \n",
       "1976.00 40.40 1.39 118.24       1975.38     441.47 49078.93        50.40   \n",
       "1977.00 40.07 1.39 121.76       1987.32     438.07 49242.04        50.07   \n",
       "1978.00 39.97 1.40 122.11       2000.84     436.29 49777.43        49.97   \n",
       "1979.00 39.75 1.41 124.75       2010.22     433.96 48702.99        49.75   \n",
       "1980.00 39.52 1.42 125.99       2001.93     428.93 46033.28        49.52   \n",
       "1981.00 39.48 1.42 127.31       1981.21     425.42 44891.04        49.48   \n",
       "1982.00 39.47 1.43 127.22       1975.13     423.89 45914.47        49.47   \n",
       "1983.00 39.33 1.43 127.99       1954.25     385.38 46610.72        49.33   \n",
       "1984.00 39.27 1.44 127.07       1973.26     378.52 46625.59        49.27   \n",
       "1985.00 39.19 1.44 128.07       2000.39     377.02 48106.38        49.19   \n",
       "1986.00 39.10 1.44 129.41       2006.03     374.98 49498.04        49.10   \n",
       "1987.00 39.06 1.45 129.94       2015.71     372.33 50000.78        49.06   \n",
       "1988.00 39.15 1.45 125.60       2029.73     368.76 50099.26        49.15   \n",
       "1989.00 39.19 1.45 124.98       2040.74     367.94 49565.48        49.19   \n",
       "1990.00 39.27 1.46 127.96       2036.08     366.56 49501.27        49.27   \n",
       "1991.00 39.39 1.46 128.27       2027.52     367.89 48187.00        49.39   \n",
       "1992.00 39.53 1.46 128.84       2018.73     363.50 47905.88        49.53   \n",
       "1993.00 39.73 1.47 130.98       2028.55     360.76 48439.27        49.73   \n",
       "1994.00 39.86 1.47 134.58       2048.59     357.29 48909.06        49.86   \n",
       "1995.00 40.10 1.47 141.38       2057.31     354.14 49615.22        50.10   \n",
       "1996.00 40.29 1.47 129.55       2071.22     355.11 51822.09        50.29   \n",
       "1997.00 40.37 1.47 130.00       2070.47     353.21 52351.05        50.37   \n",
       "1998.00 40.56 1.47 131.28       2075.67     350.72 54277.19        50.56   \n",
       "1999.00 40.78 1.47 130.62       2084.51     348.56 55508.53        50.78   \n",
       "2000.00 40.92 1.47 131.66       2089.98     349.30 54405.77        50.92   \n",
       "2001.00 40.81 1.47 141.75       2088.64     344.47 57874.79        50.81   \n",
       "2002.00 41.05 1.47 140.67       2076.13     341.63 59400.99        51.05   \n",
       "2003.00 41.34 1.47 149.28       2066.24     341.54 58607.68        51.34   \n",
       "2004.00 41.60 1.47 151.88       2064.32     339.49 58846.16        51.60   \n",
       "2005.00 41.61 1.47 154.02       2071.69     340.58 58305.72        51.61   \n",
       "2006.00 41.72 1.47 154.92       2082.65     339.33 58395.18        51.72   \n",
       "2007.00 41.84 1.47 155.28       2086.05     338.24 59650.03        51.84   \n",
       "2008.00 41.94 1.48 155.89       2081.83     337.00 58246.10        51.94   \n",
       "2009.00 41.95 1.48 157.80       2058.96     333.04 59579.17        51.95   \n",
       "2010.00 41.95 1.48 159.48       2028.18     330.92 58363.53        51.95   \n",
       "2011.00 42.02 1.48 160.07       2034.83     328.28 56678.71        52.02   \n",
       "2012.00 42.12 1.48 161.60       2048.03     327.41 57493.37        52.12   \n",
       "2013.00 42.19 1.47 162.20       2056.17     326.07 57701.02        52.19   \n",
       "2014.00 42.17 1.48 162.42       2059.12     325.88 57637.36        52.17   \n",
       "2015.00 42.07 1.48 164.64       2070.09     326.11 58976.60        52.07   \n",
       "2016.00 42.03 1.48 165.19       2072.36     322.83 60441.27        52.03   \n",
       "2017.00 41.93 1.48 167.40       2078.01     321.88 61140.95        51.93   \n",
       "2018.00 41.96 1.48 168.83       2080.33     322.60 61611.07        51.96   \n",
       "2019.00 41.92 1.48 168.87       2083.37     319.81 62327.91        51.92   \n",
       "\n",
       "         age_plus_ten  wage  \n",
       "year                         \n",
       "1976.00         50.40 24.36  \n",
       "1977.00         50.07 24.21  \n",
       "1978.00         49.97 24.34  \n",
       "1979.00         49.75 23.72  \n",
       "1980.00         49.52 22.53  \n",
       "1981.00         49.48 22.20  \n",
       "1982.00         49.47 22.74  \n",
       "1983.00         49.33 23.32  \n",
       "1984.00         49.27 23.08  \n",
       "1985.00         49.19 23.42  \n",
       "1986.00         49.10 24.03  \n",
       "1987.00         49.06 24.19  \n",
       "1988.00         49.15 24.13  \n",
       "1989.00         49.19 23.74  \n",
       "1990.00         49.27 23.76  \n",
       "1991.00         49.39 23.30  \n",
       "1992.00         49.53 23.25  \n",
       "1993.00         49.73 23.34  \n",
       "1994.00         49.86 23.43  \n",
       "1995.00         50.10 23.64  \n",
       "1996.00         50.29 24.36  \n",
       "1997.00         50.37 24.59  \n",
       "1998.00         50.56 25.40  \n",
       "1999.00         50.78 25.97  \n",
       "2000.00         50.92 25.46  \n",
       "2001.00         50.81 26.98  \n",
       "2002.00         51.05 27.90  \n",
       "2003.00         51.34 27.62  \n",
       "2004.00         51.60 27.79  \n",
       "2005.00         51.61 27.43  \n",
       "2006.00         51.72 27.30  \n",
       "2007.00         51.84 27.88  \n",
       "2008.00         51.94 27.35  \n",
       "2009.00         51.95 28.19  \n",
       "2010.00         51.95 27.98  \n",
       "2011.00         52.02 27.06  \n",
       "2012.00         52.12 27.26  \n",
       "2013.00         52.19 27.29  \n",
       "2014.00         52.17 27.25  \n",
       "2015.00         52.07 27.77  \n",
       "2016.00         52.03 28.54  \n",
       "2017.00         51.93 28.76  \n",
       "2018.00         51.96 29.03  \n",
       "2019.00         51.92 29.29  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_year = df.groupby('year').mean()\n",
    "df_year"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "brown-merit",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='year', ylabel='wage'>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(data=df_year, x=\"year\", y=\"wage\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "extreme-network",
   "metadata": {},
   "source": [
    "## Stop and think\n",
    "\n",
    "What do we see has happened here with wages? \n",
    "\n",
    "- What was the average wage in 1980? \n",
    "- What was the average wage in 2019?\n",
    "- How has the average wage changed over those 40 years?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "failing-funeral",
   "metadata": {},
   "source": [
    "## Exercise 5\n",
    "\n",
    "Lets practice the function `groupby`. Before we computed the average over different variables grouped by year. \n",
    "\n",
    "1. Compute the average of different variables grouped by **occbin**.\n",
    "(Hint: See above)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "lesser-scheme",
   "metadata": {},
   "source": [
    "## Look at male-female wages over time\n",
    "\n",
    "First lets replace Male=1 and Female=2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "trained-disorder",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Replace \n",
    "df['sex'] = df['sex'].replace(1,\"Male\")\n",
    "df['sex'] = df['sex'].replace(2,\"Female\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ecological-schema",
   "metadata": {},
   "source": [
    "We can group by multiple variables at once.\n",
    "\n",
    "Try `groupby(['year','sex'])`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "mediterranean-andrew",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>race</th>\n",
       "      <th>annual_hours</th>\n",
       "      <th>occ1990dd</th>\n",
       "      <th>salary</th>\n",
       "      <th>age_plus_10</th>\n",
       "      <th>age_plus_ten</th>\n",
       "      <th>wage</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>year</th>\n",
       "      <th>sex</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">1976.00</th>\n",
       "      <th>Female</th>\n",
       "      <td>40.42</td>\n",
       "      <td>121.47</td>\n",
       "      <td>1743.01</td>\n",
       "      <td>380.87</td>\n",
       "      <td>30716.21</td>\n",
       "      <td>50.42</td>\n",
       "      <td>50.42</td>\n",
       "      <td>17.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>40.38</td>\n",
       "      <td>116.19</td>\n",
       "      <td>2123.11</td>\n",
       "      <td>480.01</td>\n",
       "      <td>60753.02</td>\n",
       "      <td>50.38</td>\n",
       "      <td>50.38</td>\n",
       "      <td>28.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">1977.00</th>\n",
       "      <th>Female</th>\n",
       "      <td>40.11</td>\n",
       "      <td>125.26</td>\n",
       "      <td>1740.31</td>\n",
       "      <td>374.38</td>\n",
       "      <td>30758.17</td>\n",
       "      <td>50.11</td>\n",
       "      <td>50.11</td>\n",
       "      <td>17.37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>40.05</td>\n",
       "      <td>119.51</td>\n",
       "      <td>2146.30</td>\n",
       "      <td>479.07</td>\n",
       "      <td>61138.95</td>\n",
       "      <td>50.05</td>\n",
       "      <td>50.05</td>\n",
       "      <td>28.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978.00</th>\n",
       "      <th>Female</th>\n",
       "      <td>39.96</td>\n",
       "      <td>124.94</td>\n",
       "      <td>1762.28</td>\n",
       "      <td>372.29</td>\n",
       "      <td>31286.35</td>\n",
       "      <td>49.96</td>\n",
       "      <td>49.96</td>\n",
       "      <td>17.42</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 age   race  annual_hours  occ1990dd   salary  age_plus_10  \\\n",
       "year    sex                                                                  \n",
       "1976.00 Female 40.42 121.47       1743.01     380.87 30716.21        50.42   \n",
       "        Male   40.38 116.19       2123.11     480.01 60753.02        50.38   \n",
       "1977.00 Female 40.11 125.26       1740.31     374.38 30758.17        50.11   \n",
       "        Male   40.05 119.51       2146.30     479.07 61138.95        50.05   \n",
       "1978.00 Female 39.96 124.94       1762.28     372.29 31286.35        49.96   \n",
       "\n",
       "                age_plus_ten  wage  \n",
       "year    sex                         \n",
       "1976.00 Female         50.42 17.39  \n",
       "        Male           50.38 28.79  \n",
       "1977.00 Female         50.11 17.37  \n",
       "        Male           50.05 28.62  \n",
       "1978.00 Female         49.96 17.42  "
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2 = df.groupby(['year','sex']).mean()\n",
    "df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "irish-pride",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='year', ylabel='wage'>"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(data=df2, x=\"year\", y=\"wage\", hue=\"sex\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dated-model",
   "metadata": {},
   "source": [
    "## Stop and think\n",
    "\n",
    "**Trends over time**\n",
    "- How much has the average Male wage increased?\n",
    "- How much has the average Female wage increased?\n",
    "\n",
    "**Wage gap**\n",
    "- What was the wage gap in 1980?\n",
    "- What was the wage gap in 2019?\n",
    "\n",
    "**Broader consequences**\n",
    "\n",
    "How does this plot explain trends happening to the average wage over time?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "amateur-contributor",
   "metadata": {},
   "source": [
    "## Exercise 6\n",
    "\n",
    "Now lets look at the White-Non White  wage gap in the US. \n",
    "\n",
    "1. Use `replace()` to change the values of the variable `white` to words.\n",
    "\n",
    "2. Plot the average wage for White and non-White people in the US.\n",
    "\n",
    "3. How have wages changed for White and Non-White people?\n",
    "\n",
    "4. How has the White - Non-White wage gap changed since 1980?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "front-layer",
   "metadata": {},
   "source": [
    "# Solutions"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "thorough-oracle",
   "metadata": {},
   "source": [
    "### Exercise 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "incoming-preliminary",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>race</th>\n",
       "      <th>annual_hours</th>\n",
       "      <th>occ1990dd</th>\n",
       "      <th>occtitle</th>\n",
       "      <th>occbin</th>\n",
       "      <th>educbin</th>\n",
       "      <th>salary</th>\n",
       "      <th>age_plus_10</th>\n",
       "      <th>age_plus_ten</th>\n",
       "      <th>wage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>58.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>276</td>\n",
       "      <td>Cashiers</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>Less than HS</td>\n",
       "      <td>20286.76</td>\n",
       "      <td>68.00</td>\n",
       "      <td>68.00</td>\n",
       "      <td>9.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>42.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>337</td>\n",
       "      <td>Bookkeepers and accounting and auditing clerks</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>Less than HS</td>\n",
       "      <td>36299.29</td>\n",
       "      <td>52.00</td>\n",
       "      <td>52.00</td>\n",
       "      <td>17.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>58.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>2340.00</td>\n",
       "      <td>799</td>\n",
       "      <td>Production checkers, graders, and sorters in m...</td>\n",
       "      <td>Operators</td>\n",
       "      <td>Less than HS</td>\n",
       "      <td>75656.79</td>\n",
       "      <td>68.00</td>\n",
       "      <td>68.00</td>\n",
       "      <td>32.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>28.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>200.00</td>\n",
       "      <td>2080.00</td>\n",
       "      <td>379</td>\n",
       "      <td>General office clerks</td>\n",
       "      <td>Sales/Admin.</td>\n",
       "      <td>Some college</td>\n",
       "      <td>21098.96</td>\n",
       "      <td>38.00</td>\n",
       "      <td>38.00</td>\n",
       "      <td>10.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1976.00</td>\n",
       "      <td>25.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>100.00</td>\n",
       "      <td>1560.00</td>\n",
       "      <td>804</td>\n",
       "      <td>Driver/sales workers and truck Drivers</td>\n",
       "      <td>Operators</td>\n",
       "      <td>Some college</td>\n",
       "      <td>31761.88</td>\n",
       "      <td>35.00</td>\n",
       "      <td>35.00</td>\n",
       "      <td>20.36</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     year   age  sex   race  annual_hours  occ1990dd  \\\n",
       "0 1976.00 58.00 2.00 100.00       2080.00        276   \n",
       "1 1976.00 42.00 2.00 100.00       2080.00        337   \n",
       "2 1976.00 58.00 1.00 100.00       2340.00        799   \n",
       "3 1976.00 28.00 2.00 200.00       2080.00        379   \n",
       "4 1976.00 25.00 1.00 100.00       1560.00        804   \n",
       "\n",
       "                                            occtitle        occbin  \\\n",
       "0                                           Cashiers  Sales/Admin.   \n",
       "1     Bookkeepers and accounting and auditing clerks  Sales/Admin.   \n",
       "2  Production checkers, graders, and sorters in m...     Operators   \n",
       "3                              General office clerks  Sales/Admin.   \n",
       "4             Driver/sales workers and truck Drivers     Operators   \n",
       "\n",
       "        educbin   salary  age_plus_10  age_plus_ten  wage  \n",
       "0  Less than HS 20286.76        68.00         68.00  9.75  \n",
       "1  Less than HS 36299.29        52.00         52.00 17.45  \n",
       "2  Less than HS 75656.79        68.00         68.00 32.33  \n",
       "3  Some college 21098.96        38.00         38.00 10.14  \n",
       "4  Some college 31761.88        35.00         35.00 20.36  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 1. Salary is the person's annual salary.\n",
    "    \n",
    "# 2. Summary stats \n",
    "df['salary'].describe()\n",
    "# median salary is around $42,000. \n",
    "# Sensible it is lower than 2018 because income goes up over time. \n",
    "# Our data starts in 1976\n",
    "# max salary is around $1.9 million\n",
    "\n",
    "\n",
    "# 3. Problem with salary is that people who work more hours have larger salaries. \n",
    "# We want to look at wages per hour.\n",
    "\n",
    "# 4. Solve this with wage variable.\n",
    "df['wage'] = df['salary'] / df['annual_hours']\n",
    "# df['wage'] = df['salary'] / df['annual_hours']\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "occupied-mercy",
   "metadata": {},
   "source": [
    "### Exercise 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "increased-litigation",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x7f971e5afc70>"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 1. White = 100, Black=200, Asian=651\n",
    "\n",
    "# 2. \n",
    "# In 2019, the US was about 60% non-Hispanic White \n",
    "# In 1980, the US was about 80% non-Hispanic White\n",
    "df['race'].value_counts(normalize=True)\n",
    "\n",
    "# 4. \n",
    "df['white'] = (df['race'] == 100)\n",
    "df.head()\n",
    "\n",
    "# # 3. \n",
    "sns.catplot(x='white', data=df, kind='count')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "hispanic-ranking",
   "metadata": {},
   "source": [
    "### Exercise 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "integrated-replica",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "24.361706430603217"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "idx = df['year']==1976\n",
    "df76 = df[idx]\n",
    "df76['wage'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "necessary-nudist",
   "metadata": {},
   "source": [
    "### Exercise 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "saving-regard",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   2518721.00\n",
       "mean         25.91\n",
       "std          22.08\n",
       "min           5.00\n",
       "25%          13.98\n",
       "50%          20.90\n",
       "75%          31.22\n",
       "max         499.31\n",
       "Name: wage, dtype: float64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['wage'].describe()\n",
    "\n",
    "\n",
    "# 1. \n",
    "df = df[df['wage'] >= 5]\n",
    "\n",
    "# 2.\n",
    "df = df[df['wage'] < 500]\n",
    "\n",
    "df['wage'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "asian-daniel",
   "metadata": {},
   "source": [
    "### Exercise 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "compliant-affiliation",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>race</th>\n",
       "      <th>annual_hours</th>\n",
       "      <th>occ1990dd</th>\n",
       "      <th>salary</th>\n",
       "      <th>age_plus_10</th>\n",
       "      <th>age_plus_ten</th>\n",
       "      <th>wage</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>occbin</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Farm/Fish/Forest</th>\n",
       "      <td>2000.91</td>\n",
       "      <td>40.52</td>\n",
       "      <td>1.57</td>\n",
       "      <td>159.14</td>\n",
       "      <td>1877.92</td>\n",
       "      <td>439.29</td>\n",
       "      <td>32074.89</td>\n",
       "      <td>50.52</td>\n",
       "      <td>50.52</td>\n",
       "      <td>16.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manage./Professional/Tech.</th>\n",
       "      <td>2001.35</td>\n",
       "      <td>41.36</td>\n",
       "      <td>1.50</td>\n",
       "      <td>146.95</td>\n",
       "      <td>2156.53</td>\n",
       "      <td>78.25</td>\n",
       "      <td>77381.49</td>\n",
       "      <td>51.36</td>\n",
       "      <td>51.36</td>\n",
       "      <td>35.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Operators</th>\n",
       "      <td>1997.08</td>\n",
       "      <td>40.58</td>\n",
       "      <td>1.26</td>\n",
       "      <td>140.67</td>\n",
       "      <td>2021.17</td>\n",
       "      <td>811.06</td>\n",
       "      <td>40883.10</td>\n",
       "      <td>50.58</td>\n",
       "      <td>50.58</td>\n",
       "      <td>20.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Production</th>\n",
       "      <td>1996.75</td>\n",
       "      <td>40.54</td>\n",
       "      <td>1.08</td>\n",
       "      <td>129.25</td>\n",
       "      <td>2102.49</td>\n",
       "      <td>577.62</td>\n",
       "      <td>54360.53</td>\n",
       "      <td>50.54</td>\n",
       "      <td>50.54</td>\n",
       "      <td>25.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sales/Admin.</th>\n",
       "      <td>1999.06</td>\n",
       "      <td>40.57</td>\n",
       "      <td>1.65</td>\n",
       "      <td>141.10</td>\n",
       "      <td>1984.52</td>\n",
       "      <td>300.30</td>\n",
       "      <td>46448.24</td>\n",
       "      <td>50.57</td>\n",
       "      <td>50.57</td>\n",
       "      <td>22.80</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              year   age  sex   race  annual_hours  occ1990dd  \\\n",
       "occbin                                                                          \n",
       "Farm/Fish/Forest           2000.91 40.52 1.57 159.14       1877.92     439.29   \n",
       "Manage./Professional/Tech. 2001.35 41.36 1.50 146.95       2156.53      78.25   \n",
       "Operators                  1997.08 40.58 1.26 140.67       2021.17     811.06   \n",
       "Production                 1996.75 40.54 1.08 129.25       2102.49     577.62   \n",
       "Sales/Admin.               1999.06 40.57 1.65 141.10       1984.52     300.30   \n",
       "\n",
       "                             salary  age_plus_10  age_plus_ten  wage  \n",
       "occbin                                                                \n",
       "Farm/Fish/Forest           32074.89        50.52         50.52 16.70  \n",
       "Manage./Professional/Tech. 77381.49        51.36         51.36 35.44  \n",
       "Operators                  40883.10        50.58         50.58 20.08  \n",
       "Production                 54360.53        50.54         50.54 25.85  \n",
       "Sales/Admin.               46448.24        50.57         50.57 22.80  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Example answer\n",
    "\n",
    "df_occ = df.groupby('occbin').mean()\n",
    "df_occ.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "emerging-bearing",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x7f97243773a0>"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(y=df_occ.index, x=\"wage\", kind=\"bar\", data=df_occ, orient=\"h\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "external-terror",
   "metadata": {},
   "source": [
    "### Exercise 6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "front-examination",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='year', ylabel='wage'>"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Replace \n",
    "df['white'] = df['white'].replace(True,\"White\")\n",
    "df['white'] = df['white'].replace(False,\"Non-White\")\n",
    "\n",
    "# Group\n",
    "df3 = df.groupby(['year','white']).mean()\n",
    "df3.head()\n",
    "\n",
    "sns.lineplot(data=df3, x=\"year\", y=\"wage\", hue=\"white\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
